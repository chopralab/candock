#!/usr/bin/env bash

# Load default variables

: ${MCANDOCK_PATH:=@CMAKE_INSTALL_PREFIX@}
: ${MCANDOCK_VER:=v@CANDOCK_MAJOR_VERSION@.@CANDOCK_MINOR_VERSION@.@CANDOCK_TWEAK_VERSION@}

: ${MCANDOCK_SUP_PATH:=@CMAKE_INSTALL_PREFIX@}

: ${MCANDOCK_frag_separator:=$MCANDOCK_MOD_PATH/splitfragments.pl}

: ${MCANDOCK_extractor:=$MCANDOCK_MOD_PATH/extract_candock_to_scores_and_models.pl}
: ${MCANDOCK_poses:=1}
: ${MCANDOCK_pymol:=/depot/gchopra/apps/pymol/pymol}

: ${CANDOCK_bslib:=$MCANDOCK_SUP_PATH/bslibdb}
: ${CANDOCK_names:=$MCANDOCK_SUP_PATH/bslibdb/data/names}
: ${CANDOCK_bio:=$MCANDOCK_SUP_PATH/bslibdb/data/bio}

export CANDOCK_bslib
export CANDOCK_names
export CANDOCK_bio

: ${CANDOCK_amber_xml:=$MCANDOCK_SUP_PATH/data/amber10.xml}
: ${CANDOCK_water_xml:=$MCANDOCK_SUP_PATH/data/tip3p.xml}
: ${CANDOCK_gaff_xml:=$MCANDOCK_SUP_PATH/data/gaff.xml}
: ${CANDOCK_gaff_dat:=$MCANDOCK_SUP_PATH/data/gaff.dat}

export CANDOCK_amber_xml
export CANDOCK_water_xml
export CANDOCK_gaff_xml
export CANDOCK_gaff_dat

: ${CANDOCK_dist:=$MCANDOCK_SUP_PATH/data/csd_complete_distance_distributions.txt}
: ${CANDOCK_obj_dir:=$MCANDOCK_SUP_PATH/obj}

export CANDOCK_dist
export CANDOCK_obj_dir

# Check if were running in a PBS environment

if [[ $PBS_ENVIRONMENT == BATCH ]]
then
        : ${MCANDOCK_working_dir:=$PBS_O_WORKDIR}
else
        : ${MCANDOCK_working_dir:=$PWD}
fi

function find_centroids() {

    ln -s $MCANDOCK_SUP_PATH/bslibdb bslibdb

    touch find_centroids.lck
    SECONDS=0

    $MCANDOCK_PATH/$MCANDOCK_VER/cd_find_centroids

    echo "find_centroids took $SECONDS seconds to complete"
    rm find_centroids.lck

    rm bslibdb
}

function prep_fragments() {

    cd $MCANDOCK_working_dir
    echo "Running fragment in $PWD"

    touch prep_fragments.lck
    SECONDS=0

    $MCANDOCK_PATH/$MCANDOCK_VER/cd_prep_fragments

    echo "Fragmenting took $SECONDS seconds to complete"
    rm prep_fragments.lck
}

function dock_fragments() {

    cd $MCANDOCK_working_dir
    echo "Running dock in $PWD"

    touch dock_fragments.lck
    SECONDS=0

    $MCANDOCK_PATH/$MCANDOCK_VER/cd_dock_fragments

    echo "Docking of fragments took $SECONDS seconds to complete"
    rm dock_fragments.lck
}

function link_fragments() {

    cd $MCANDOCK_working_dir
    echo "Running link in $PWD"

    touch link_fragments.lck
    SECONDS=0

    $MCANDOCK_PATH/$MCANDOCK_VER/cd_link_fragments

    echo "Linking of fragments took $SECONDS seconds to complete"
    rm link_fragments.lck
}

function extract_result() {
    cd $MCANDOCK_working_dir
    echo "Running extract in $PWD"

    mkdir extract
    cd extract

    perl $MCANDOCK_extractor $([[ "$MCANDOCK_MAKE_PYMOL" -eq 0 ]] && echo -f) -n $MCANDOCK_poses ../docked/*.pdb > ../scores.csv

    if [[ "$MCANDOCK_MAKE_PYMOL" -ne 0 ]]
    then
        $MCANDOCK_pymol -c create_pse.py
        mv all.pse ..
    fi

    cd ..
    rm -fr extract
}
